/*
 * Farm Attic API
 * Backend API for Farm Attic application
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: Fred@gigagantic-server.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CartResponse;
import org.openapitools.client.model.CartUpdateRequest;
import org.openapitools.client.model.OrderResponse;
import org.openapitools.client.model.ProductDto;
import org.openapitools.client.model.ProductRequest;
import java.util.UUID;
import org.openapitools.client.model.UserCartResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addProductToCartTest() throws ApiException {
        ProductRequest productRequest = null;
        ProductRequest response = api.addProductToCart(productRequest);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProductFromCartTest() throws ApiException {
        UUID cartId = null;
        UUID productId = null;
        Object response = api.deleteProductFromCart(cartId, productId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllProductsTest() throws ApiException {
        List<ProductDto> response = api.getAllProducts();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOrderDetailsTest() throws ApiException {
        UUID userId = null;
        List<OrderResponse> response = api.getOrderDetails(userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserCartDetailsTest() throws ApiException {
        UUID userId = null;
        UserCartResponse response = api.getUserCartDetails(userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserProductsTest() throws ApiException {
        UUID userId = null;
        List<ProductDto> response = api.getUserProducts(userId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void loginTest() throws ApiException {
        api.login();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void placeOrderTest() throws ApiException {
        UUID body = null;
        OrderResponse response = api.placeOrder(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void saveProductTest() throws ApiException {
        ProductDto productDto = null;
        ProductDto response = api.saveProduct(productDto);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCartTest() throws ApiException {
        UUID cartId = null;
        UUID productId = null;
        CartUpdateRequest cartUpdateRequest = null;
        CartResponse response = api.updateCart(cartId, productId, cartUpdateRequest);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateProductTest() throws ApiException {
        UUID productId = null;
        ProductDto productDto = null;
        ProductDto response = api.updateProduct(productId, productDto);

        // TODO: test validations
    }
    
}
